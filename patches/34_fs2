commit 0bc62a378ad4b912ead3ead61a6180e5795a1ca7
Author: Umaro <umaro@narshe.net>
Date:   Tue Jun 21 22:01:05 2011 +0200

    fs/select.c: fix information leak to userspace
    
        On some architectures __kernel_suseconds_t is int.  On these archs struct
        timeval has padding bytes at the end.  This struct is copied to userspace
        with these padding bytes uninitialized.  This leads to leaking of contents
        of kernel stack memory.
    
        This bug was added with v2.6.27-rc5-286-gb773ad4.
    
        [akpm@linux-foundation.org: avoid the memset on architectures which don't need it]
        Signed-off-by: Vasiliy Kulikov <segooon@gmail.com>
        Cc: Al Viro <viro@zeniv.linux.org.uk>
        Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
        Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/fs/select.c b/fs/select.c
index b7b10aa..e56560d 100644
--- a/fs/select.c
+++ b/fs/select.c
@@ -306,6 +306,8 @@ static int poll_select_copy_remaining(struct timespec *end_time, void __user *p,
 		rts.tv_sec = rts.tv_nsec = 0;
 
 	if (timeval) {
+		if (sizeof(rtv) > sizeof(rtv.tv_sec) + sizeof(rtv.tv_usec))
+			memset(&rtv, 0, sizeof(rtv));
 		rtv.tv_sec = rts.tv_sec;
 		rtv.tv_usec = rts.tv_nsec / NSEC_PER_USEC;
 
