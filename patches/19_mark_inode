commit 58cd1659740ee88d58e8b47fe91224c753aa4482
Author: Umaro <umaro@narshe.net>
Date:   Tue Jun 21 20:15:59 2011 +0200

    fs: mark_inode_dirty barrier fix
    
        Filesystems appear to be using ->dirty_inode, expecting that the dirtying
        operating is done and visible to all CPUs (eg. setting private inode dirty
        bits, without any barriers themselves). So release the dirty "critical
        section" with a barrier before calling ->dirty_inode.
    
        Cost is not significantly changed, because we're just moving the barrier.
        Those filesystems that do use ->dirty_inode should have to care slightly
        less about barriers, which is a good thing.
    
        Signed-off-by: Nick Piggin <npiggin@kernel.dk>

diff --git a/fs/fs-writeback.c b/fs/fs-writeback.c
index 7bc8123..48af221 100644
--- a/fs/fs-writeback.c
+++ b/fs/fs-writeback.c
@@ -903,12 +903,6 @@ void __mark_inode_dirty(struct inode *inode, int flags)
 			sb->s_op->dirty_inode(inode);
 	}
 
-	/*
-	 * make sure that changes are seen by all cpus before we test i_state
-	 * -- mikulas
-	 */
-	smp_mb();
-
 	/* avoid the locking if we can */
 	if ((inode->i_state & flags) == flags)
 		return;
