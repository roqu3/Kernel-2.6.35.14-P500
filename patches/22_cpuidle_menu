commit b4ce27c2e2624300583fec151e7b41cbfe43f6ed
Author: Umaro <umaro@narshe.net>
Date:   Tue Jun 21 20:58:12 2011 +0200

    cpuidle: menu: fixed wrapping timers at 4.294 seconds
    
        commit 7467571f4480b273007517b26297c07154c73924 upstream.
    
        Cpuidle menu governor is using u32 as a temporary datatype for storing
        nanosecond values which wrap around at 4.294 seconds. This causes errors
        in predicted sleep times resulting in higher than should be C state
        selection and increased power consumption. This also breaks cpuidle
        state residency statistics.
    
        Signed-off-by: Tero Kristo <tero.kristo@nokia.com>
        Signed-off-by: Len Brown <len.brown@intel.com>
        Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/cpuidle/governors/menu.c b/drivers/cpuidle/governors/menu.c
index 1b12870..021c316 100644
--- a/drivers/cpuidle/governors/menu.c
+++ b/drivers/cpuidle/governors/menu.c
@@ -236,6 +236,7 @@ static int menu_select(struct cpuidle_device *dev)
 	int latency_req = pm_qos_request(PM_QOS_CPU_DMA_LATENCY);
 	int i;
 	int multiplier;
+	struct timespec t;
 
 	if (data->needs_update) {
 		menu_update(dev);
@@ -250,8 +251,9 @@ static int menu_select(struct cpuidle_device *dev)
 		return 0;
 
 	/* determine the expected residency time, round up */
+	t = ktime_to_timespec(tick_nohz_get_sleep_length());
 	data->expected_us =
-	    DIV_ROUND_UP((u32)ktime_to_ns(tick_nohz_get_sleep_length()), 1000);
+	    t.tv_sec * USEC_PER_SEC + t.tv_nsec / NSEC_PER_USEC;
 
 
 	data->bucket = which_bucket(data->expected_us);
