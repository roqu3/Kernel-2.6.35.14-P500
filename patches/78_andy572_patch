commit 3648effac9a6d1c87916a134992d2cca7f4ea289
Author: francisco <francisco@francisco.(none)>
Date:   Sun Sep 18 03:51:57 2011 +0100

    Change by andys request

diff --git a/kernel/sysctl.c b/kernel/sysctl.c
index 1737f71..2f660b8 100644
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@ -274,7 +274,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "sched_child_runs_first",
 		.data		= &sysctl_sched_child_runs_first,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #ifdef CONFIG_SCHED_DEBUG
@@ -282,7 +282,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "sched_min_granularity_ns",
 		.data		= &sysctl_sched_min_granularity,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= sched_proc_update_handler,
 		.extra1		= &min_sched_granularity_ns,
 		.extra2		= &max_sched_granularity_ns,
@@ -291,7 +291,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "sched_latency_ns",
 		.data		= &sysctl_sched_latency,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= sched_proc_update_handler,
 		.extra1		= &min_sched_granularity_ns,
 		.extra2		= &max_sched_granularity_ns,
@@ -300,7 +300,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "sched_wakeup_granularity_ns",
 		.data		= &sysctl_sched_wakeup_granularity,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= sched_proc_update_handler,
 		.extra1		= &min_wakeup_granularity_ns,
 		.extra2		= &max_wakeup_granularity_ns,
@@ -309,7 +309,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "sched_shares_ratelimit",
 		.data		= &sysctl_sched_shares_ratelimit,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= sched_proc_update_handler,
 		.extra1		= &min_sched_shares_ratelimit,
 		.extra2		= &max_sched_shares_ratelimit,
@@ -318,7 +318,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "sched_tunable_scaling",
 		.data		= &sysctl_sched_tunable_scaling,
 		.maxlen		= sizeof(enum sched_tunable_scaling),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= sched_proc_update_handler,
 		.extra1		= &min_sched_tunable_scaling,
 		.extra2		= &max_sched_tunable_scaling,
@@ -327,7 +327,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "sched_shares_thresh",
 		.data		= &sysctl_sched_shares_thresh,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &zero,
 	},
@@ -335,28 +335,28 @@ static struct ctl_table kern_table[] = {
 		.procname	= "sched_migration_cost",
 		.data		= &sysctl_sched_migration_cost,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "sched_nr_migrate",
 		.data		= &sysctl_sched_nr_migrate,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "sched_time_avg",
 		.data		= &sysctl_sched_time_avg,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "timer_migration",
 		.data		= &sysctl_timer_migration,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &zero,
 		.extra2		= &one,
@@ -366,21 +366,21 @@ static struct ctl_table kern_table[] = {
 		.procname	= "sched_rt_period_us",
 		.data		= &sysctl_sched_rt_period,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= sched_rt_handler,
 	},
 	{
 		.procname	= "sched_rt_runtime_us",
 		.data		= &sysctl_sched_rt_runtime,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= sched_rt_handler,
 	},
 	{
 		.procname	= "sched_compat_yield",
 		.data		= &sysctl_sched_compat_yield,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #ifdef CONFIG_SCHED_AUTOGROUP
@@ -388,7 +388,7 @@ static struct ctl_table kern_table[] = {
 		.procname       = "sched_autogroup_enabled",
 		.data           = &sysctl_sched_autogroup_enabled,
 		.maxlen         = sizeof(unsigned int),
-		.mode           = 0644,
+		.mode           = 0666,
 		.proc_handler   = proc_dointvec,
 		.extra1         = &zero,
 		.extra2         = &one,
@@ -399,7 +399,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "prove_locking",
 		.data		= &prove_locking,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -408,7 +408,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "lock_stat",
 		.data		= &lock_stat,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -416,35 +416,35 @@ static struct ctl_table kern_table[] = {
 		.procname	= "panic",
 		.data		= &panic_timeout,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "core_uses_pid",
 		.data		= &core_uses_pid,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "core_pattern",
 		.data		= core_pattern,
 		.maxlen		= CORENAME_MAX_SIZE,
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dostring,
 	},
 	{
 		.procname	= "core_pipe_limit",
 		.data		= &core_pipe_limit,
 		.maxlen		= sizeof(unsigned int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #ifdef CONFIG_PROC_SYSCTL
 	{
 		.procname	= "tainted",
 		.maxlen 	= sizeof(long),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_taint,
 	},
 #endif
@@ -453,7 +453,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "latencytop",
 		.data		= &latencytop_enabled,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -462,7 +462,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "real-root-dev",
 		.data		= &real_root_dev,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -470,7 +470,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "print-fatal-signals",
 		.data		= &print_fatal_signals,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #ifdef CONFIG_SPARC
@@ -478,21 +478,21 @@ static struct ctl_table kern_table[] = {
 		.procname	= "reboot-cmd",
 		.data		= reboot_command,
 		.maxlen		= 256,
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dostring,
 	},
 	{
 		.procname	= "stop-a",
 		.data		= &stop_a_enabled,
 		.maxlen		= sizeof (int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "scons-poweroff",
 		.data		= &scons_pwroff,
 		.maxlen		= sizeof (int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -501,7 +501,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "tsb-ratio",
 		.data		= &sysctl_tsb_ratio,
 		.maxlen		= sizeof (int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -510,14 +510,14 @@ static struct ctl_table kern_table[] = {
 		.procname	= "soft-power",
 		.data		= &pwrsw_enabled,
 		.maxlen		= sizeof (int),
-	 	.mode		= 0644,
+	 	.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "unaligned-trap",
 		.data		= &unaligned_enabled,
 		.maxlen		= sizeof (int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -525,7 +525,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "ctrl-alt-del",
 		.data		= &C_A_D,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #ifdef CONFIG_FUNCTION_TRACER
@@ -533,7 +533,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "ftrace_enabled",
 		.data		= &ftrace_enabled,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= ftrace_enable_sysctl,
 	},
 #endif
@@ -542,7 +542,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "stack_tracer_enabled",
 		.data		= &stack_tracer_enabled,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= stack_trace_sysctl,
 	},
 #endif
@@ -551,7 +551,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "ftrace_dump_on_oops",
 		.data		= &ftrace_dump_on_oops,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -560,14 +560,14 @@ static struct ctl_table kern_table[] = {
 		.procname	= "modprobe",
 		.data		= &modprobe_path,
 		.maxlen		= KMOD_PATH_LEN,
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dostring,
 	},
 	{
 		.procname	= "modules_disabled",
 		.data		= &modules_disabled,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		/* only handle a transition from default "0" to "1" */
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &one,
@@ -579,7 +579,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "hotplug",
 		.data		= &uevent_helper,
 		.maxlen		= UEVENT_HELPER_PATH_LEN,
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dostring,
 	},
 #endif
@@ -597,7 +597,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "acct",
 		.data		= &acct_parm,
 		.maxlen		= 3*sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -606,7 +606,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "sysrq",
 		.data		= &__sysrq_enabled,
 		.maxlen		= sizeof (int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= sysrq_sysctl_handler,
 	},
 #endif
@@ -623,7 +623,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "threads-max",
 		.data		= &max_threads,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
@@ -635,7 +635,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "overflowuid",
 		.data		= &overflowuid,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &minolduid,
 		.extra2		= &maxolduid,
@@ -644,7 +644,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "overflowgid",
 		.data		= &overflowgid,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &minolduid,
 		.extra2		= &maxolduid,
@@ -655,7 +655,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "ieee_emulation_warnings",
 		.data		= &sysctl_ieee_emulation_warnings,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -663,7 +663,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "userprocess_debug",
 		.data		= &show_unhandled_signals,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -671,7 +671,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "pid_max",
 		.data		= &pid_max,
 		.maxlen		= sizeof (int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &pid_max_min,
 		.extra2		= &pid_max_max,
@@ -680,7 +680,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "panic_on_oops",
 		.data		= &panic_on_oops,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #if defined CONFIG_PRINTK
@@ -688,28 +688,28 @@ static struct ctl_table kern_table[] = {
 		.procname	= "printk",
 		.data		= &console_loglevel,
 		.maxlen		= 4*sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "printk_ratelimit",
 		.data		= &printk_ratelimit_state.interval,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_jiffies,
 	},
 	{
 		.procname	= "printk_ratelimit_burst",
 		.data		= &printk_ratelimit_state.burst,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "printk_delay",
 		.data		= &printk_delay_msec,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &zero,
 		.extra2		= &ten_thousand,
@@ -727,14 +727,14 @@ static struct ctl_table kern_table[] = {
 		.procname       = "unknown_nmi_panic",
 		.data           = &unknown_nmi_panic,
 		.maxlen         = sizeof (int),
-		.mode           = 0644,
+		.mode           = 0666,
 		.proc_handler   = proc_dointvec,
 	},
 	{
 		.procname       = "nmi_watchdog",
 		.data           = &nmi_watchdog_enabled,
 		.maxlen         = sizeof (int),
-		.mode           = 0644,
+		.mode           = 0666,
 		.proc_handler   = proc_nmi_enabled,
 	},
 #endif
@@ -743,14 +743,14 @@ static struct ctl_table kern_table[] = {
 		.procname	= "panic_on_unrecovered_nmi",
 		.data		= &panic_on_unrecovered_nmi,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "panic_on_io_nmi",
 		.data		= &panic_on_io_nmi,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
@@ -771,14 +771,14 @@ static struct ctl_table kern_table[] = {
 		.procname	= "kstack_depth_to_print",
 		.data		= &kstack_depth_to_print,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "io_delay_type",
 		.data		= &io_delay_type,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -787,7 +787,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "randomize_va_space",
 		.data		= &randomize_va_space,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -796,7 +796,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "spin_retry",
 		.data		= &spin_retry,
 		.maxlen		= sizeof (int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -805,7 +805,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "acpi_video_flags",
 		.data		= &acpi_realmode_flags,
 		.maxlen		= sizeof (unsigned long),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_doulongvec_minmax,
 	},
 #endif
@@ -814,14 +814,14 @@ static struct ctl_table kern_table[] = {
 		.procname	= "ignore-unaligned-usertrap",
 		.data		= &no_unaligned_warning,
 		.maxlen		= sizeof (int),
-	 	.mode		= 0644,
+	 	.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "unaligned-dump-stack",
 		.data		= &unaligned_dump_stack,
 		.maxlen		= sizeof (int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -830,7 +830,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "softlockup_panic",
 		.data		= &softlockup_panic,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &zero,
 		.extra2		= &one,
@@ -839,7 +839,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "softlockup_thresh",
 		.data		= &softlockup_thresh,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dosoftlockup_thresh,
 		.extra1		= &neg_one,
 		.extra2		= &sixty,
@@ -850,7 +850,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "hung_task_panic",
 		.data		= &sysctl_hung_task_panic,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &zero,
 		.extra2		= &one,
@@ -859,21 +859,21 @@ static struct ctl_table kern_table[] = {
 		.procname	= "hung_task_check_count",
 		.data		= &sysctl_hung_task_check_count,
 		.maxlen		= sizeof(unsigned long),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_doulongvec_minmax,
 	},
 	{
 		.procname	= "hung_task_timeout_secs",
 		.data		= &sysctl_hung_task_timeout_secs,
 		.maxlen		= sizeof(unsigned long),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dohung_task_timeout_secs,
 	},
 	{
 		.procname	= "hung_task_warnings",
 		.data		= &sysctl_hung_task_warnings,
 		.maxlen		= sizeof(unsigned long),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_doulongvec_minmax,
 	},
 #endif
@@ -882,7 +882,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "compat-log",
 		.data		= &compat_log,
 		.maxlen		= sizeof (int),
-	 	.mode		= 0644,
+	 	.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -891,7 +891,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "max_lock_depth",
 		.data		= &max_lock_depth,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -899,7 +899,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "poweroff_cmd",
 		.data		= &poweroff_cmd,
 		.maxlen		= POWEROFF_CMD_PATH_LEN,
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dostring,
 	},
 #ifdef CONFIG_KEYS
@@ -914,7 +914,7 @@ static struct ctl_table kern_table[] = {
 		.procname       = "rcutorture_runnable",
 		.data           = &rcutorture_runnable,
 		.maxlen         = sizeof(int),
-		.mode           = 0644,
+		.mode           = 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -930,21 +930,21 @@ static struct ctl_table kern_table[] = {
 		.procname	= "perf_event_paranoid",
 		.data		= &sysctl_perf_event_paranoid,
 		.maxlen		= sizeof(sysctl_perf_event_paranoid),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "perf_event_mlock_kb",
 		.data		= &sysctl_perf_event_mlock,
 		.maxlen		= sizeof(sysctl_perf_event_mlock),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "perf_event_max_sample_rate",
 		.data		= &sysctl_perf_event_sample_rate,
 		.maxlen		= sizeof(sysctl_perf_event_sample_rate),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -953,7 +953,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "kmemcheck",
 		.data		= &kmemcheck_enabled,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -962,7 +962,7 @@ static struct ctl_table kern_table[] = {
 		.procname	= "blk_iopoll",
 		.data		= &blk_iopoll_enabled,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -987,49 +987,49 @@ static struct ctl_table vm_table[] = {
 		.procname	= "overcommit_memory",
 		.data		= &sysctl_overcommit_memory,
 		.maxlen		= sizeof(sysctl_overcommit_memory),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "panic_on_oom",
 		.data		= &sysctl_panic_on_oom,
 		.maxlen		= sizeof(sysctl_panic_on_oom),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "oom_kill_allocating_task",
 		.data		= &sysctl_oom_kill_allocating_task,
 		.maxlen		= sizeof(sysctl_oom_kill_allocating_task),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "oom_dump_tasks",
 		.data		= &sysctl_oom_dump_tasks,
 		.maxlen		= sizeof(sysctl_oom_dump_tasks),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "overcommit_ratio",
 		.data		= &sysctl_overcommit_ratio,
 		.maxlen		= sizeof(sysctl_overcommit_ratio),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "page-cluster", 
 		.data		= &page_cluster,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "dirty_background_ratio",
 		.data		= &dirty_background_ratio,
 		.maxlen		= sizeof(dirty_background_ratio),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= dirty_background_ratio_handler,
 		.extra1		= &zero,
 		.extra2		= &one_hundred,
@@ -1038,7 +1038,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "dirty_background_bytes",
 		.data		= &dirty_background_bytes,
 		.maxlen		= sizeof(dirty_background_bytes),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= dirty_background_bytes_handler,
 		.extra1		= &one_ul,
 	},
@@ -1046,7 +1046,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "dirty_ratio",
 		.data		= &vm_dirty_ratio,
 		.maxlen		= sizeof(vm_dirty_ratio),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= dirty_ratio_handler,
 		.extra1		= &zero,
 		.extra2		= &one_hundred,
@@ -1055,7 +1055,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "dirty_bytes",
 		.data		= &vm_dirty_bytes,
 		.maxlen		= sizeof(vm_dirty_bytes),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= dirty_bytes_handler,
 		.extra1		= &dirty_bytes_min,
 	},
@@ -1063,14 +1063,14 @@ static struct ctl_table vm_table[] = {
 		.procname	= "dirty_writeback_centisecs",
 		.data		= &dirty_writeback_interval,
 		.maxlen		= sizeof(dirty_writeback_interval),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= dirty_writeback_centisecs_handler,
 	},
 	{
 		.procname	= "dirty_expire_centisecs",
 		.data		= &dirty_expire_interval,
 		.maxlen		= sizeof(dirty_expire_interval),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
@@ -1084,7 +1084,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "swappiness",
 		.data		= &vm_swappiness,
 		.maxlen		= sizeof(vm_swappiness),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &zero,
 		.extra2		= &one_hundred,
@@ -1094,7 +1094,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "nr_hugepages",
 		.data		= NULL,
 		.maxlen		= sizeof(unsigned long),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= hugetlb_sysctl_handler,
 		.extra1		= (void *)&hugetlb_zero,
 		.extra2		= (void *)&hugetlb_infinity,
@@ -1104,7 +1104,7 @@ static struct ctl_table vm_table[] = {
 		.procname       = "nr_hugepages_mempolicy",
 		.data           = NULL,
 		.maxlen         = sizeof(unsigned long),
-		.mode           = 0644,
+		.mode           = 0666,
 		.proc_handler   = &hugetlb_mempolicy_sysctl_handler,
 		.extra1		= (void *)&hugetlb_zero,
 		.extra2		= (void *)&hugetlb_infinity,
@@ -1114,21 +1114,21 @@ static struct ctl_table vm_table[] = {
 		.procname	= "hugetlb_shm_group",
 		.data		= &sysctl_hugetlb_shm_group,
 		.maxlen		= sizeof(gid_t),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	 },
 	 {
 		.procname	= "hugepages_treat_as_movable",
 		.data		= &hugepages_treat_as_movable,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= hugetlb_treat_movable_handler,
 	},
 	{
 		.procname	= "nr_overcommit_hugepages",
 		.data		= NULL,
 		.maxlen		= sizeof(unsigned long),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= hugetlb_overcommit_handler,
 		.extra1		= (void *)&hugetlb_zero,
 		.extra2		= (void *)&hugetlb_infinity,
@@ -1138,14 +1138,14 @@ static struct ctl_table vm_table[] = {
 		.procname	= "lowmem_reserve_ratio",
 		.data		= &sysctl_lowmem_reserve_ratio,
 		.maxlen		= sizeof(sysctl_lowmem_reserve_ratio),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= lowmem_reserve_ratio_sysctl_handler,
 	},
 	{
 		.procname	= "drop_caches",
 		.data		= &sysctl_drop_caches,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= drop_caches_sysctl_handler,
 	},
 #ifdef CONFIG_COMPACTION
@@ -1160,7 +1160,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "extfrag_threshold",
 		.data		= &sysctl_extfrag_threshold,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= sysctl_extfrag_handler,
 		.extra1		= &min_extfrag_threshold,
 		.extra2		= &max_extfrag_threshold,
@@ -1171,7 +1171,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "min_free_kbytes",
 		.data		= &min_free_kbytes,
 		.maxlen		= sizeof(min_free_kbytes),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= min_free_kbytes_sysctl_handler,
 		.extra1		= &zero,
 	},
@@ -1179,14 +1179,14 @@ static struct ctl_table vm_table[] = {
 		.procname	= "min_free_order_shift",
 		.data		= &min_free_order_shift,
 		.maxlen		= sizeof(min_free_order_shift),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= &proc_dointvec
 	},
 	{
 		.procname	= "percpu_pagelist_fraction",
 		.data		= &percpu_pagelist_fraction,
 		.maxlen		= sizeof(percpu_pagelist_fraction),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= percpu_pagelist_fraction_sysctl_handler,
 		.extra1		= &min_percpu_pagelist_fract,
 	},
@@ -1195,7 +1195,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "max_map_count",
 		.data		= &sysctl_max_map_count,
 		.maxlen		= sizeof(sysctl_max_map_count),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &zero,
 	},
@@ -1204,7 +1204,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "nr_trim_pages",
 		.data		= &sysctl_nr_trim_pages,
 		.maxlen		= sizeof(sysctl_nr_trim_pages),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &zero,
 	},
@@ -1213,14 +1213,14 @@ static struct ctl_table vm_table[] = {
 		.procname	= "laptop_mode",
 		.data		= &laptop_mode,
 		.maxlen		= sizeof(laptop_mode),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_jiffies,
 	},
 	{
 		.procname	= "block_dump",
 		.data		= &block_dump,
 		.maxlen		= sizeof(block_dump),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 		.extra1		= &zero,
 	},
@@ -1228,7 +1228,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "vfs_cache_pressure",
 		.data		= &sysctl_vfs_cache_pressure,
 		.maxlen		= sizeof(sysctl_vfs_cache_pressure),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 		.extra1		= &zero,
 	},
@@ -1237,7 +1237,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "legacy_va_layout",
 		.data		= &sysctl_legacy_va_layout,
 		.maxlen		= sizeof(sysctl_legacy_va_layout),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 		.extra1		= &zero,
 	},
@@ -1247,7 +1247,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "zone_reclaim_mode",
 		.data		= &zone_reclaim_mode,
 		.maxlen		= sizeof(zone_reclaim_mode),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 		.extra1		= &zero,
 	},
@@ -1255,7 +1255,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "min_unmapped_ratio",
 		.data		= &sysctl_min_unmapped_ratio,
 		.maxlen		= sizeof(sysctl_min_unmapped_ratio),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= sysctl_min_unmapped_ratio_sysctl_handler,
 		.extra1		= &zero,
 		.extra2		= &one_hundred,
@@ -1264,7 +1264,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "min_slab_ratio",
 		.data		= &sysctl_min_slab_ratio,
 		.maxlen		= sizeof(sysctl_min_slab_ratio),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= sysctl_min_slab_ratio_sysctl_handler,
 		.extra1		= &zero,
 		.extra2		= &one_hundred,
@@ -1275,7 +1275,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "stat_interval",
 		.data		= &sysctl_stat_interval,
 		.maxlen		= sizeof(sysctl_stat_interval),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_jiffies,
 	},
 #endif
@@ -1284,7 +1284,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "mmap_min_addr",
 		.data		= &dac_mmap_min_addr,
 		.maxlen		= sizeof(unsigned long),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= mmap_min_addr_handler,
 	},
 #endif
@@ -1293,7 +1293,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "numa_zonelist_order",
 		.data		= &numa_zonelist_order,
 		.maxlen		= NUMA_ZONELIST_ORDER_LEN,
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= numa_zonelist_order_handler,
 	},
 #endif
@@ -1303,7 +1303,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "vdso_enabled",
 		.data		= &vdso_enabled,
 		.maxlen		= sizeof(vdso_enabled),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 		.extra1		= &zero,
 	},
@@ -1313,7 +1313,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "highmem_is_dirtyable",
 		.data		= &vm_highmem_is_dirtyable,
 		.maxlen		= sizeof(vm_highmem_is_dirtyable),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &zero,
 		.extra2		= &one,
@@ -1323,7 +1323,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "scan_unevictable_pages",
 		.data		= &scan_unevictable_pages,
 		.maxlen		= sizeof(scan_unevictable_pages),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= scan_unevictable_handler,
 	},
 #ifdef CONFIG_MEMORY_FAILURE
@@ -1331,7 +1331,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "memory_failure_early_kill",
 		.data		= &sysctl_memory_failure_early_kill,
 		.maxlen		= sizeof(sysctl_memory_failure_early_kill),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &zero,
 		.extra2		= &one,
@@ -1340,7 +1340,7 @@ static struct ctl_table vm_table[] = {
 		.procname	= "memory_failure_recovery",
 		.data		= &sysctl_memory_failure_recovery,
 		.maxlen		= sizeof(sysctl_memory_failure_recovery),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &zero,
 		.extra2		= &one,
@@ -1386,14 +1386,14 @@ static struct ctl_table fs_table[] = {
 		.procname	= "file-max",
 		.data		= &files_stat.max_files,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 	{
 		.procname	= "nr_open",
 		.data		= &sysctl_nr_open,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &sysctl_nr_open_min,
 		.extra2		= &sysctl_nr_open_max,
@@ -1409,7 +1409,7 @@ static struct ctl_table fs_table[] = {
 		.procname	= "overflowuid",
 		.data		= &fs_overflowuid,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &minolduid,
 		.extra2		= &maxolduid,
@@ -1418,7 +1418,7 @@ static struct ctl_table fs_table[] = {
 		.procname	= "overflowgid",
 		.data		= &fs_overflowgid,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &minolduid,
 		.extra2		= &maxolduid,
@@ -1428,7 +1428,7 @@ static struct ctl_table fs_table[] = {
 		.procname	= "leases-enable",
 		.data		= &leases_enable,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -1437,7 +1437,7 @@ static struct ctl_table fs_table[] = {
 		.procname	= "dir-notify-enable",
 		.data		= &dir_notify_enable,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -1447,7 +1447,7 @@ static struct ctl_table fs_table[] = {
 		.procname	= "lease-break-time",
 		.data		= &lease_break_time,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec,
 	},
 #endif
@@ -1463,7 +1463,7 @@ static struct ctl_table fs_table[] = {
 		.procname	= "aio-max-nr",
 		.data		= &aio_max_nr,
 		.maxlen		= sizeof(aio_max_nr),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_doulongvec_minmax,
 	},
 #endif /* CONFIG_AIO */
@@ -1486,7 +1486,7 @@ static struct ctl_table fs_table[] = {
 		.procname	= "suid_dumpable",
 		.data		= &suid_dumpable,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec_minmax,
 		.extra1		= &zero,
 		.extra2		= &two,
@@ -1502,7 +1502,7 @@ static struct ctl_table fs_table[] = {
 		.procname	= "pipe-max-size",
 		.data		= &pipe_max_size,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= &pipe_proc_fn,
 		.extra1		= &pipe_min_size,
 	},
@@ -1520,7 +1520,7 @@ static struct ctl_table debug_table[] = {
 		.procname	= "exception-trace",
 		.data		= &show_unhandled_signals,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_dointvec
 	},
 #endif
@@ -1529,7 +1529,7 @@ static struct ctl_table debug_table[] = {
 		.procname	= "kprobes-optimization",
 		.data		= &sysctl_kprobes_optimization,
 		.maxlen		= sizeof(int),
-		.mode		= 0644,
+		.mode		= 0666,
 		.proc_handler	= proc_kprobes_optimization_handler,
 		.extra1		= &zero,
 		.extra2		= &one,
